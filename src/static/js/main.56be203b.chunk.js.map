{"version":3,"sources":["assets/bi_polar.png","globals.js","actions/loginActions.js","components/Login/index.js","actions/registerActions.js","components/register.js","components/Navbar/navbar.js","actions/userActions.js","components/DashboardTabs/Home/HomeOptions/manage.js","components/DashboardTabs/Home/HomeOptions/slotBooking.js","components/DashboardTabs/Home/HomeOptions/route.js","components/DashboardTabs/Home/index.js","components/tabRoutes.js","components/Dashboard/dashboard.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SERVER_URI","APP_KEY","loginUser","email","password","a","res","url","axios","post","headers","Accept","data","Login","state","loading","_login","e","preventDefault","setState","then","err","console","log","notification","success","message","placement","localStorage","setItem","JSON","stringify","props","history","push","error","className","style","height","backgroundColor","src","Logo","alt","width","margin","top","left","bottom","right","position","boxShadow","padding","textAlign","letterSpacing","marginTop","onSubmit","this","size","placeholder","value","onChange","target","prefix","UserOutlined","Password","LockOutlined","type","htmlType","Component","registerUser","name","Register","_register","MailOutlined","NavBar","logout","clear","window","go","bg","expand","href","biPolarLogo","SettingOutlined","fontSize","color","BellOutlined","overlay","Item","key","Divider","onClick","danger","trigger","icon","registerSlot","userId","phone","date","title","Authorization","getItem","tennisSlot","fetch","method","resObj","json","Content","Layout","Meta","Card","DashboardManage","user","slotModal","header","description","time","range","start","end","result","i","disabledDate","current","moment","endOf","dateString","onTimeChange","timeString","onOk","register","parse","_id","createSlotModal","Modal","aria-labelledby","show","onHide","centered","Header","closeButton","Title","Body","for","errName","format","use12Hours","Footer","marginRight","cover","actions","EditOutlined","EllipsisOutlined","avatar","marginBottom","SlotBooking","tennisData","cycleData","swimmingData","badmintonData","gymData","clubData","_getUserInfo","users","columns","dataIndex","dataSource","Routes","path","component","from","to","Sider","Home","location","mode","defaultSelectedKeys","pathname","split","defaultOpenKeys","borderRight","AppstoreAddOutlined","LaptopOutlined","TabRoutes","UserDashboard","id","includes","PrivateRoute","rest","loggedIn","render","token","exact","Dashboard","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.56be203b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bi_polar.e06ab775.png\";","let context = \"TEST\"; //TEST (for testing) and PROD (for Production)\n\n// export const SERVER_URI = \"http://35.154.187.162:8000/api\";\nexport const SERVER_URI = \"http://localhost:8000/api\";\n  // context === \"PROD\"\n  //   ? \"\"\n  //   : window.location.hostname === \"localhost\"\n  //   ? \"http://localhost:8000/api\"\n  //   : \"https://residential-portal.herokuapp.com:8000/api\";\nexport const APP_KEY =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjZGZuIiwibmFtZSI6ImNsb3VkREZOIEVuZHBvaW50IiwiaWF0IjoxNTE2MjM5MDIyfQ.u7K0eXq9XhDkvW-SgC-neczEk6u2sOERJJZ59ygSpxw\";\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\n// User login /users/login\nexport const loginUser = async (email, password) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/login`;\n    res = await axios.post(\n      url,\n      { email, password },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, notification, Input } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Logo from \"./../../assets/bi_polar.png\";\nimport { loginUser } from \"../../actions/loginActions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loading: false,\n  };\n  _login = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    let data = loginUser(this.state.email, this.state.password);\n    data.then((res, err) => {\n      if (err) {\n        console.log(err);\n      } else {\n        if (res.err) {\n          console.log(err);\n        } else {\n          if (res.data) {\n            notification.success({\n              message: \"Login Successful\",\n              placement: \"bottomRight\",\n            });\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\n\n            this.props.history.push(\"/dashboard/home\");\n          } else {\n            notification.error({\n              message: \"Invalid User Credentials\",\n              placement: \"bottomRight\",\n            });\n          }\n          this.setState({ loading: false });\n        }\n      }\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className=\"p-4\"\n          style={{ height: \"100vh\", backgroundColor: \"#f4f4f4\" }}\n        >\n          <img src={Logo} alt=\"Logo\" style={{ width: \"7%\" }} />\n          <div\n            style={{\n              margin: \"auto\",\n              width: \"500px\",\n              height: \"400px\",\n              backgroundColor: \"#ffffff\",\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              position: \"absolute\",\n              boxShadow: \"0 0 20px #c7c7c7\",\n              padding: \"2%\",\n            }}\n          >\n            <h2\n              style={{\n                textAlign: \"center\",\n                letterSpacing: \"2px\",\n                marginTop: \"5%\",\n              }}\n            >\n              LOGIN\n            </h2>\n            <div className=\"mt-5 pl-4 pr-4\">\n              <form onSubmit={this._login}>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    prefix={<UserOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input.Password\n                    size=\"large\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    prefix={<LockOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ letterSpacing: \"1px\" }}\n                    loading={this.state.loading}\n                  >\n                    Login\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\n// User Register /users/register\nexport const registerUser = async (name, email, password) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/register`;\n    res = await axios.post(\n      url,\n      { name, email, password },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, notification, Input } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport Logo from \"../assets/bi_polar.png\";\nimport { registerUser } from \"../actions/registerActions\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    loading: false,\n  };\n  _register = (e) => {\n    e.preventDefault();\n\n    if (\n      this.state.name !== \"\" &&\n      this.state.email !== \"\" &&\n      this.state.password !== \"\"\n    ) {\n      this.setState({ loading: true });\n      let data = registerUser(\n        this.state.name,\n        this.state.email,\n        this.state.password\n      );\n      data.then((res, err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          if (res.err) {\n            console.log(res.err);\n          } else {\n            if (res.data === \"User Registered\") {\n              notification.success({\n                message: \"Registration Successful\",\n                placement: \"bottomRight\",\n              });\n            } else {\n              notification.error({\n                message: \"Register Unsuccessfull\",\n                placement: \"bottomRight\",\n              });\n            }\n            this.setState({\n              loading: false,\n              name: \"\",\n              email: \"\",\n              password: \"\",\n            });\n          }\n        }\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className=\"p-4\"\n          style={{ height: \"100vh\", backgroundColor: \"#f4f4f4\" }}\n        >\n          <img src={Logo} alt=\"Logo\" style={{ width: \"7%\" }} />\n          <div\n            style={{\n              margin: \"auto\",\n              width: \"500px\",\n              height: \"450px\",\n              backgroundColor: \"#ffffff\",\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              position: \"absolute\",\n              boxShadow: \"0 0 20px #c7c7c7\",\n              padding: \"2%\",\n            }}\n          >\n            <h2\n              style={{\n                textAlign: \"center\",\n                letterSpacing: \"2px\",\n                marginTop: \"5%\",\n              }}\n            >\n              REGISTER\n            </h2>\n            <div className=\"mt-5 pl-4 pr-4\">\n              <form onSubmit={this._register}>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Name\"\n                    value={this.state.name}\n                    onChange={(e) => {\n                      this.setState({ name: e.target.value });\n                    }}\n                    prefix={<UserOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    prefix={<MailOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input.Password\n                    size=\"large\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    prefix={<LockOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ letterSpacing: \"1px\" }}\n                    loading={this.state.loading}\n                  >\n                    Register\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\r\nimport { Avatar, Button, Menu, Dropdown } from \"antd\";\r\nimport { UserOutlined,\r\n         BellOutlined,\r\n         SettingOutlined } from \"@ant-design/icons\";\r\nimport biPolarLogo from \"./../../assets/bi_polar.png\";\r\nimport \"./navbar.css\";\r\n\r\nclass NavBar extends Component {\r\n  logout = () => {\r\n    localStorage.clear();\r\n    window.history.go(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-bar\">\r\n        <nav bg=\"light\" expand=\"lg\" className=\"p-2\">\r\n          <a href=\"/dashboard/home\">\r\n            <img\r\n              src={biPolarLogo}\r\n              alt=\"biPolar\"\r\n              style={{ width: \"4%\" }}\r\n              className=\"logo-white mb-2\"\r\n            />\r\n          </a>\r\n          <ul className=\"\">\r\n            <li>\r\n              <Button type=\"link\">\r\n                <SettingOutlined\r\n                  style={{ fontSize: \"1.5rem\", color: \"#3b3b3b\" }}\r\n                />\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button type=\"link\">\r\n                <BellOutlined\r\n                  style={{ fontSize: \"1.5rem\", color: \"#3b3b3b\" }}\r\n                />\r\n              </Button>\r\n            </li>\r\n\r\n            <li>\r\n              <Dropdown\r\n                overlay={\r\n                  <Menu style={{ width: \"150px\", textAlign: \"center\" }}>\r\n                    <Menu.Item key=\"0\">\r\n                      <a href=\"#0\">Profile</a>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\">\r\n                      <a href=\"#0\">Preferences</a>\r\n                    </Menu.Item>\r\n                    <Menu.Divider />\r\n                    <Menu.Item key=\"3\" onClick={this.logout}>\r\n                      <Button type=\"primary\" danger style={{ width: \"100%\" }}>\r\n                        Logout\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                }\r\n                trigger={[\"click\"]}\r\n                placement=\"bottomLeft\"\r\n              >\r\n                <Button\r\n                  type=\"link\"\r\n                  className=\"ant-dropdown-link\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <Avatar size=\"large\" icon={<UserOutlined />} />{\" \"}\r\n                </Button>\r\n              </Dropdown>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\nexport const registerUser = async (\n  customerId,\n  name,\n  email,\n  phone,\n  password,\n  ) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/register`;\n    res = await axios.post(\n      url,\n      { customerId, name, email, phone, password },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const registerSlot = async (\n  userId,\n  name,\n  email,\n  phone,\n  date,\n  title\n  ) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/slot/${title}`;\n    res = await axios.post(\n      url,\n      { userId, name, email, phone, date,title },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const tennisSlot = async (title) => {\n  try {\n    const resObj = await fetch(SERVER_URI + `/slot/${title}`, {\n      method: \"get\",\n      headers: {\n        \"X-Key\": APP_KEY,\n        Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n      },\n    });\n\n    const res = await resObj.json();\n    console.log(res.data)\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const getUsers = async (paginate) => {\n  try {\n    const resObj = await fetch(SERVER_URI + `/users/fetch/all/${paginate}`, {\n      method: \"get\",\n      headers: {\n        \"X-Key\": APP_KEY,\n        Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n      },\n    });\n\n    const res = await resObj.json();\n    console.log(res.data)\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\n\nexport const deleteUser = async (userId) => {\n  \n  try {\n    console.log(userId);\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/delete/${userId}`;\n    res = await axios.post(\n      url,\n      {},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\nexport const updateUser = async (_id, name, phone, username, isCustomerAdmin) => {\n  try {\n    console.log(_id+\":\"+name+\":\"+phone+\":\"+username+\":\"+isCustomerAdmin)\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/update`;\n    res = await axios.post(\n      url,\n      { _id, name, phone, username, isCustomerAdmin },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    // console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\nexport const searchUsers = async( customerId, field ) =>{\n\n  try{\n    console.log(\"Username : \"+ field);\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/search/${customerId}/${field}`;\n    res = await axios.post(\n      url,\n      {},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    return res.data;\n  }catch(err)\n  {\n    console.log(err);\n    return null;\n  }\n\n};\n\nexport const getUsersByCustomer = async (customerId, paginate) => {\n  try {\n    const resObj = await fetch(\n      SERVER_URI + `/users/fetch/${customerId}/${paginate}`,\n      {\n        method: \"get\",\n        headers: {\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n\n    const res = await resObj.json();\n\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const getAllUsersByCustomer = async (customerId) => {\n  try {\n    const resObj = await fetch(SERVER_URI + `/users/fetch/${customerId}`, {\n      method: \"get\",\n      headers: {\n        \"X-Key\": APP_KEY,\n        Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n      },\n    });\n\n    const res = await resObj.json();\n\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const deleteUserByCustomer = async (customerId, userId) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/delete/${customerId}/${userId}`;\n    res = await axios.post(\n      url,\n      {},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    // console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\nexport const updateUserByCustomer = async (\n  customerId,\n  id,\n  name,\n  phone,\n  username,\n) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/update/${customerId}`;\n    res = await axios.post(\n      url,\n      { id, name, phone, username},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    // console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n","import React, { Component } from 'react'\nimport { Layout, Card, Avatar,notification,Button, Input,DatePicker,Tooltip,TimePicker } from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport {\n  registerSlot\n  } from \"../../../../actions/userActions\";\n\nimport Logo from \"../../../../assets/bi_polar.png\";\n\nimport { Modal } from \"react-bootstrap\";\n\nconst { Content } = Layout;\nconst { Meta } = Card;\n\n\nclass DashboardManage extends Component {\n\n    state = {\n\n        userId: \"\",\n        user: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        slotModal: false,\n        date: \"\",\n        title: \"\",\n        header: \"\",\n        description : \"\",\n        time : \"\"\n    }\n\n    componentDidMount() {\n        if (JSON.parse(localStorage.getItem(\"user\"))) {\n          console.log(JSON.parse(localStorage.getItem(\"user\")).user);\n          this.setState({\n            userId : JSON.parse(localStorage.getItem(\"user\")).user._id,\n            name : JSON.parse(localStorage.getItem(\"user\")).user.name,\n            email: JSON.parse(localStorage.getItem(\"user\")).user.email,\n          });\n          this.props.history.push(\"/dashboard/home/manage\");\n          notification.success({\n            message: \"Dashboard opened Successfully\",\n            placement: \"bottomRight\",\n          });\n        }\n        else{\n          this.props.history.push(\"/dashboard/home/slot\");\n          notification.error({\n            message: \"User Dashboard couldn't be opened\",\n            placement: \"bottomRight\",\n          });\n        }\n\n      }\n      range = (start, end) => {\n        const result = [];\n        for (let i = start; i < end; i++) {\n          result.push(i);\n        }\n        return result;\n      }\n\n      disabledDate = (current) => {\n        // Can not select days before today and today\n        return current && current < moment().endOf('day');\n      }\n\n      \n\n      onChange = (value, dateString) => {\n        console.log('Selected Time: ', value);\n        console.log('Formatted Selected Time: ', dateString);\n        this.setState({\n            date : dateString\n        });\n      }\n\n      onTimeChange= (time, timeString) => {\n        console.log(time, timeString);\n        this.setState({\n          time : timeString\n      });\n      }\n\n      onOk = (value) => {\n        console.log('onOk: ', value);\n        this.setState({\n          date : value\n      });\n      }\n\n      register = (e) => {\n        e.preventDefault();\n        console.log(\"function called\");\n          if (\n            this.state.name !== \"\" &&\n            this.state.email !== \"\" &&\n            this.state.phone !== \"\" &&\n            this.state.date !== \"\" &&\n            this.state.time !== \"\"\n            \n          ) {\n            \n            // console.log(\"User Object is clicked\");\n            console.log(this.state.date+\" \"+this.state.time);\n            let data = registerSlot(\n              JSON.parse(localStorage.getItem(\"user\")).user,\n              this.state.name,\n              this.state.email,\n              this.state.phone,\n              this.state.date+ \" \"+ this.state.time,\n              this.state.header\n            );\n            data.then((res, err) => {\n              if (err) {\n                console.log(err);\n                notification.error({\n                  message: \"Slot is Already Booked\",\n                  placement: \"bottomRight\",\n                });\n              } else {\n                if (res) {\n                  notification.success({\n                    message: \"Slot Booked Successfully\",\n                    placement: \"bottomRight\",\n                  });\n                  this.setState({\n                    slotModal : false,\n                  });\n                  \n                } else {\n                  notification.error({\n                    message: \"Slot Is'nt Available.\",\n                    placement: \"bottomRight\",\n                  });\n                  this.setState({\n                    slotModal : false,\n                  });\n                }\n              }\n            });\n          }\n        \n      };\n\n\n\n\n    render() {\n        let createSlotModal = (\n            <Modal\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              show={this.state.slotModal}\n              onHide={() => {\n                this.setState({ slotModal: false });\n              }}\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>{this.state.title}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n\n                <div className=\"row\">\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"name\">Name</label>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={this.state.name}\n                        onChange={(e) =>\n                          this.setState({\n                            name: e.target.value,\n                            errName: e.target.value !== \"\" ? false : true,\n                          })\n                        }\n                      />\n                  </div>\n                  </div>\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"phone\">Phone</label>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Phone\"\n                        value={this.state.phone}\n                        onChange={(e) =>\n                          this.setState({\n                            phone: e.target.value,\n                            \n                          })\n                        }\n                      />\n                    </div>\n                  </div>\n\n                </div>\n                \n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <div className=\"form-group\">\n                      <label for=\"email\">Email</label>\n      \n                      <Input\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={this.state.email}\n                        onChange={(e) => {\n                          let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                          this.setState({\n                            email: e.target.value,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <div className=\"form-group\">\n                      <label for=\"slot\">Select the Date</label>\n                        <DatePicker\n                          format=\"YYYY-MM-DD\"\n                          disabledDate={this.disabledDate}\n                          onChange={this.onChange}\n                          onOk={this.onOk}\n                          style = {{ width: \"100%\" }}\n                        />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <div className=\"form-group\">\n                      <label for=\"time\">Select the Time</label>\n                        <TimePicker use12Hours format=\"h:mm a\" onChange={this.onTimeChange} />\n                    </div>\n                  </div>\n\n            </div> \n\n            \n                \n                \n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  type=\"secondary\"\n                  // onClick={this.clearInputs}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"primary\"\n                  // loading={this.state.loading}\n                  onClick={this.register}\n                >\n                  Slot Booking{\" \"}\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          );\n\n        return (\n          \n            <Layout>\n              {createSlotModal}\n                <Content className='content'>\n\n                    <div className=\"row\">\n\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://i.pinimg.com/originals/7f/42/f8/7f42f844280b163931d9de15ba775e7c.jpg\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Tennis Court\",\n                                        header : \"tennis\",\n                                        description: \"A tennis court is the venue where the sport of tennis is played. It is a firm rectangular surface with a low net stretched across the centre\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} alt=\"Logo\" />}\n                                title=\"Tennis Court\"\n                                description=\"A tennis court is the venue where the sport of tennis is played. It is a firm rectangular surface with a low net stretched across the centre\"\n                                />\n                            </Card>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT9TwF68V_tWebKTLqt6T3EOfmweKm-w19N0g&usqp=CAU\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Cycle tracks\",\n                                        header : \"cycle\",\n                                        description: \"A cycle track is an exclusive bike facility that combines the user experience of a separated path with the on-street infrastructure of a conventional bike lane\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} />}\n                                title=\"Cycle tracks\"\n                                description=\"A cycle track is an exclusive bike facility that combines the user experience of a separated path with the on-street infrastructure of a conventional bike lane\"\n                                />\n                            </Card>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTBUM2Osq-O5eZ4GLbdZ_F4gzCMoCw5v02f_Q&usqp=CAU\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Swimming Pool\",\n                                        header: \"swimming\",\n                                        description: \"A swimming pool is a tank or large basin that is filled with water and intended for recreational or competitive swimming or diving\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} />}\n                                title=\"Swimming Pool\"\n                                description=\"A swimming pool is a tank or large basin that is filled with water and intended for recreational or competitive swimming or diving\"\n                                />\n                            </Card>\n                        </div>\n                    </div>\n\n                    <div className=\"row\" style ={{ marginTop : 25,marginBottom: 75 }}>\n\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://5.imimg.com/data5/JK/GP/MY-1515609/badminton-court-28-indoor-29-500x500.jpg\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Badminton Court\",\n                                        header: \"badminton\",\n                                        description: \"The court is rectangular and divided into halves by a net. Courts are usually marked for both singles and doubles play, although badminton rules permit a court to be marked for singles only.\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} />}\n                                title=\"Badminton Court\"\n                                description=\"The court is rectangular and divided into halves by a net. Courts are usually marked for both singles and doubles play, although badminton rules permit a court to be marked for singles only.\"\n                                />\n                            </Card>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://www.skistar.com/globalassets/bilder-nya-skistar.com/experium/gym.jpg?maxwidth=924&quality=80\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Gym\",\n                                        header: \"gym\",\n                                        description: \"physical exercises and activities performed inside, often using equipment, especially when done as a subject at school. Gymnasium is a large room with equipment for exercising the body\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} />}\n                                title=\"Gym\"\n                                description=\"physical exercises and activities performed inside, often using equipment, especially when done as a subject at school. Gymnasium is a large room with equipment for exercising the body\"\n                                />\n                            </Card>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Card\n                                style={{ width: 300 }}\n                                cover={\n                                <img\n                                    alt=\"example\"\n                                    src=\"https://www.iacworldwide.com/app/uploads/club_import/406-Le_Lido_Clubhouse_Cairo/Header/iac-le_lido_city_view_clubhouse-header_01-2000x1331.jpg\"\n                                    style = {{ width : \"100%\" , height: \"175px\" }}\n                                />\n                                }\n                                actions={[\n                                  <Tooltip title=\"settings\">\n                                    <SettingOutlined key=\"setting\" />\n                                  </Tooltip>,\n                                  <Tooltip title=\"Slot Booking\">\n                                    <EditOutlined\n                                     key=\"slot\"\n                                     onClick={() => {\n                                      this.setState({\n                                        slotModal: true,\n                                        title: \"Club House\",\n                                        header: \"club\",\n                                        description: \"A Clubhouse is a community organized to help people living with serious mental illness as they manage their illness and rejoin the worlds of employment, education, family,friends and residents.\"\n                                        \n                                      });\n                                    }}\n                                    />\n                                  </Tooltip>,\n                                  <Tooltip title=\"View\">\n                                    <EllipsisOutlined key=\"ellipsis\" />\n                                  </Tooltip>,\n                                ]}\n                            >\n                                <Meta\n                                avatar={<Avatar src={Logo} />}\n                                title=\"Club House\"\n                                description=\"A Clubhouse is a community organized to help people living with serious mental illness as they manage their illness and rejoin the worlds of employment, education, family,friends and residents.\"\n                                />\n                            </Card>\n                        </div>\n                    </div>\n                     \n                </Content>\n            </Layout>\n        \n        )\n    }\n}\n\nexport default DashboardManage;","import React, { Component } from 'react'\nimport { Layout,Card,Table,notification } from 'antd';\n\nimport {\n  tennisSlot\n  } from \"../../../../actions/userActions\";\n\nconst { Content } = Layout;\n\nclass SlotBooking extends Component {\n\n    state = {\n\n        tennisData : [],\n        cycleData : [],\n        swimmingData : [],\n        badmintonData : [],\n        gymData : [],\n        clubData : [],\n\n    }\n\n    componentDidMount() {\n        if (JSON.parse(localStorage.getItem(\"user\"))) {\n            console.log(JSON.parse(localStorage.getItem(\"user\")).user);\n            this.props.history.push(\"/dashboard/home/slot\");\n            notification.success({\n              message: \"Dashboard opened Successfully\",\n              placement: \"bottomRight\",\n            });\n            this._getUserInfo();\n          }\n          else{\n            this.props.history.push(\"/dashboard/home/manage\");\n            notification.error({\n              message: \"User Dashboard couldn't be opened\",\n              placement: \"bottomRight\",\n            });\n          }\n  \n    }\n\n    _getUserInfo = () => {\n      let tennisUsers = tennisSlot(\n        \"tennis\"\n      );\n      tennisUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              tennisData : res.users,\n             },\n          );\n        }\n      });\n\n      let cycleUsers = tennisSlot(\n\n        \"cycle\"\n      );\n      cycleUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              cycleData : res.users,\n             },\n          );\n        }\n      });\n\n      let swimmingUsers = tennisSlot(\n        \"swimming\"\n      );\n      swimmingUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              swimmingData : res.users,\n             },\n          );\n        }\n      });\n\n      let badmintonUsers = tennisSlot(\n        \"badminton\"\n      );\n      badmintonUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              badmintonData : res.users,\n             },\n          );\n        }\n      });\n\n      let gymUsers = tennisSlot(\n        \"gym\"\n      );\n      gymUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              gymData : res.users,\n             },\n          );\n        }\n      });\n\n      let clubUsers = tennisSlot(\n\n        \"club\"\n      );\n      clubUsers.then((res, err) => {\n        if (err) console.log(err);\n        else {\n          console.log(res);\n          this.setState(\n            { \n              clubData : res.users,\n             },\n          );\n        }\n      });\n    };\n\n    render() {\n\n        const columns = [\n            {\n              title: 'Name',\n              dataIndex: 'name',\n              key: 'name',\n            },\n            {\n              title: 'Date',\n              dataIndex: 'slotDate',\n              key: 'slotDate',\n            },\n          ];\n\n        return (\n            <Layout>\n                <Content className='content'>\n\n                    <div className=\"row\" >\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Tennis Court\" >\n                            <Table dataSource={this.state.tennisData} columns={columns} />\n                        </Card>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Cycle Tracks\" >\n                            <Table dataSource={this.state.cycleData} columns={columns} />\n                        </Card>\n                      </div>  \n                    </div>\n\n                    <div className=\"row\" style={{ marginTop : 10 }}>\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Swimming Pool\" >\n                            <Table dataSource={this.state.swimmingData} columns={columns} />\n                        </Card>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Badminton Court\" >\n                            <Table dataSource={this.state.badmintonData} columns={columns} />\n                        </Card>\n                      </div>  \n                    </div>\n\n                    <div className=\"row\" style={{ marginTop : 10,marginBottom: 20 }}>\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Gym\" >\n                            <Table dataSource={this.state.gymData} columns={columns} />\n                        </Card>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <Card title=\"Club House\" >\n                            <Table dataSource={this.state.clubData} columns={columns} />\n                        </Card>\n                      </div>  \n                    </div>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default SlotBooking;","import React, { Component } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport DashboardManage from './manage'\nimport SlotBooking from './slotBooking'\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/dashboard/home/manage\" component={DashboardManage} />\n        <Route path=\"/dashboard/home/slot\" component={SlotBooking} />\n        <Redirect from='/dashboard/home' to='/dashboard/home/manage'/>\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport { Layout,\n  Menu } from 'antd';\nimport { AppstoreAddOutlined,\n  LaptopOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport Routes from './HomeOptions/route'\n\n\nconst { Sider } = Layout;\n\nclass Home extends Component {\n  render() {\n\n    const { location } = this.props;\n    \n    return (\n        \n        <Layout style={{ height: '87vh' }}>\n            <Sider width={200} className=\"sidebar\">\n                <Menu\n                    mode=\"inline\"\n                    // defaultSelectedKeys={\"manage\"}\n                    defaultSelectedKeys={[location.pathname.split('/')[3]]}\n                    defaultOpenKeys={[location.pathname.split('/')[2]]}\n                    style={{ height: '100%', borderRight: 0 }}>   \n                    <Menu.Item \n                        key=\"manage\" \n                        icon={<AppstoreAddOutlined />}\n                    >\n                        <Link to='/dashboard/home/manage'/>\n                            Slot Booking\n                    </Menu.Item>\n                    <Menu.Item\n                        key=\"slot\" \n                        icon={<LaptopOutlined />}\n                    >\n                        <Link to='/dashboard/home/slot'/>\n                        Slot Managing\n                    </Menu.Item>     \n                </Menu>\n            </Sider>                    \n            <Routes/>\n        </Layout>\n\n        \n    )\n}\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n// import Discover from \"./DashboardTabs/Discover/discover\";\n// import Scan from \"./DashboardTabs/Scan/scan\";\n// import Audit from \"./DashboardTabs/Audit/audit\";\n// import Compliance from \"./DashboardTabs/Compliance/compliance\";\n// import PatchManagement from \"./DashboardTabs/PatchManagement/patchManagement\";\n// import VulnerabilityManagement from \"./DashboardTabs/VulnerabilityManagemnet/vulnerabilityManagement\";\n// import Users from \"./DashboardTabs/Users/user\"\nimport Home from \"./DashboardTabs/Home\";\n\n\nclass TabRoutes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/dashboard/home\" component={Home} />\n        {/* <Route path=\"/dashboard/audit\" component={Audit} />\n        <Route path=\"/dashboard/scan\" component={Scan} />\n        <Route path=\"/dashboard/discover\" component={Discover} />\n        <Route path=\"/dashboard/compliance\" component={Compliance} />\n        <Route path=\"/dashboard/patchManagement\" component={PatchManagement} />\n        <Route path=\"/dashboard/vulnerabilityManagement\" component={VulnerabilityManagement}/>\n        <Route path='/dashboard/users' component={Users}/> */}\n        <Redirect from=\"/dashboard/home\" to=\"/dashboard/home/manage\" />\n      </Switch>\n    );\n  }\n}\n\nexport default TabRoutes;\n","import React, { Component } from \"react\";\nimport NavBar from \"../Navbar/navbar\";\nimport \"./dashboard.css\";\nimport TabRoutes from \"../tabRoutes\";\n\nclass UserDashboard extends Component {\n  render() {\n    const { location } = this.props;\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"sticky-top\">\n          <NavBar />\n          <nav className=\"tab-bar\">\n            <a\n              href=\"/dashboard/home\"\n              id=\"home\"\n              style = {{ width: 200 }}\n              className={\n                location.pathname.includes(\"/dashboard/home\") ? \"active\" : null\n              }\n            >\n              Home\n            </a>\n            {/* <a\n              href=\"/dashboard/discover/machine/machineSummary\"\n              id=\"discover\"\n              className={\n                location.pathname.includes(\"/dashboard/discover\")\n                  ? \"active\"\n                  : null\n              }\n            >\n              Discover\n            </a>\n            <a\n              href=\"/dashboard/scan/runScan\"\n              id=\"scan\"\n              className={\n                location.pathname.includes(\"/dashboard/scan/runScan\") ? \"active\" : null\n              }\n            >\n              Scan\n            </a>\n            <a\n              href=\"/dashboard/audit/subnav1\"\n              id=\"audit\"\n              className={\n                location.pathname.includes(\"/dashboard/audit\") ? \"active\" : null\n              }\n            >\n              Audit\n            </a>\n            <a\n              href=\"/dashboard/compliance/subnav1\"\n              id=\"compliance\"\n              className={\n                location.pathname.includes(\"/dashboard/compliance\")\n                  ? \"active\"\n                  : null\n              }\n            >\n              Compliance\n            </a>\n            <a\n              href=\"/dashboard/patchManagement/subnav1\"\n              id=\"patchManagement\"\n              className={\n                location.pathname.includes(\"/dashboard/patchManagement\")\n                  ? \"active\"\n                  : null\n              }\n            >\n              Patch Management\n            </a>\n            <a\n              href=\"/dashboard/vulnerabilityManagement/subnav1\"\n              id=\"vulnerabilityManagement\"\n              className={\n                location.pathname.includes(\"/dashboard/vulnerabilityManagement\")\n                  ? \"active\"\n                  : null\n              }\n            >\n              Vulnerability Management\n            </a>\n            <a\n              href='/dashboard/users/manage' \n              id='users' \n              className={location.pathname.includes('/dashboard/users/manage') ? 'active' : null} >\n                Users\n            </a> */}\n          </nav>\n        </div>\n        <TabRoutes />\n      </div>\n    );\n  }\n}\n\nexport default UserDashboard;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./register\";\r\nimport Dashboard from './Dashboard/dashboard'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let loggedIn = JSON.parse(localStorage.getItem(\"user\"));\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn && loggedIn.token && loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <PrivateRoute path='/dashboard' component={Dashboard}/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"./components/Routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}